<?php

/**
 * @file
 * Install, update and uninstall functions for the uc_cart module.
 */

/**
 * Implements hook_schema().
 */
function uc_cart_schema() {
  $schema = array();

  $schema['uc_cart_products'] = array(
    'description' => 'Stores products placed in shopping carts.',
    'fields' => array(
      'cart_item_id' => array(
        'description' => 'Unique identifier for cart item.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'cart_id' => array(
        'description' => 'A user-specific cart ID. For authenticated users, their {users}.uid. For anonymous users, a token.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '0',
      ),
      'nid' => array(
        'description' => 'The {node}.nid of the product.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'qty' => array(
        'description' => 'The number of this product in the cart.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'changed' => array(
        'description' => 'The Unix timestamp indicating the time the product in the cart was changed.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'data' => array(
        'description' => 'A serialized array of extra cart data for the product.',
        'type' => 'text',
        'serialize' => TRUE,
      ),
    ),
    'indexes' => array(
      'cart_id' => array('cart_id'),
    ),
    'primary key' => array('cart_item_id'),
    'foreign keys' => array(
      'node' => array(
        'table' => 'node',
        'columns' => array('nid' => 'nid'),
      ),
    ),
  );

  return $schema;
}

/**
 * Implements hook_uninstall().
 */
function uc_cart_uninstall() {
  db_delete('variable')
    ->condition('name', 'uc_cart_%', 'LIKE')
    ->condition('name', 'uc_pane_%', 'LIKE')
    ->condition('name', 'uc_cap_%', 'LIKE')
    ->condition('name', 'uc_checkout_%', 'LIKE')
    ->condition('name', 'uc_msg_%', 'LIKE')
    ->condition('name', 'uc_new_customer_%', 'LIKE')
    ->execute();

  variable_del('uc_minimum_subtotal');
  variable_del('uc_add_item_redirect');
  variable_del('uc_continue_shopping_url');
  variable_del('uc_continue_shopping_type');
  variable_del('uc_use_next_buttons');
  variable_del('uc_collapse_current_pane');
  variable_del('uc_checkout_email_customer');
  variable_del('uc_checkout_email_admin');
}

/**
 * Implements hook_update_last_removed().
 */
function uc_cart_update_last_removed() {
  return 7300;
}

/**
 * Implements hook_update_N().
 */
function uc_cart_update_1000() {
  $config = config('uc_cart.settings');
  $config->set('uc_cart_add_item_msg', update_variable_get('uc_cart_add_item_msg', true));
  $config->set('uc_cart_empty_button', update_variable_get('uc_cart_empty_button', false));
  $config->set('uc_cart_anon_duration', update_variable_get('uc_cart_anon_duration', 4));
  $config->set('uc_cart_anon_unit', update_variable_get('uc_cart_anon_unit', 'hours'));
  $config->set('uc_cart_auth_duration', update_variable_get('uc_cart_auth_duration', 1));
  $config->set('uc_cart_auth_unit', update_variable_get('uc_cart_auth_unit', 'years'));
  $config->set('uc_cart_breadcrumb_text', update_variable_get('uc_cart_breadcrumb_text', ''));
  $config->set('uc_cart_breadcrumb_url', update_variable_get('uc_cart_breadcrumb_url', '<front>'));
  $config->set('uc_cart_mail_existing', update_variable_get('uc_cart_mail_existing', true));
  $config->set('uc_cart_email_validation', update_variable_get('uc_cart_email_validation', false));
  $config->set('uc_cart_new_account_name', update_variable_get('uc_cart_new_account_name', false));
  $config->set('uc_cart_new_account_password', update_variable_get('uc_cart_new_account_password', false));
  $config->set('uc_cart_default_same_address', update_variable_get('uc_cart_default_same_address', false));
  $config->set('uc_cart_delivery_not_shippable', update_variable_get('uc_cart_delivery_not_shippable', true));
  $config->set('uc_cart_checkout_complete_page', update_variable_get('uc_cart_checkout_complete_page', ''));
  $config->set('uc_cart_block_empty_hide', update_variable_get('uc_cart_block_empty_hide', false));
  $config->set('uc_cart_block_collapsible', update_variable_get('uc_cart_block_collapsible', true));
  $config->set('uc_cart_show_help_text', update_variable_get('uc_cart_show_help_text', false));
  $config->set('uc_cart_help_text', update_variable_get('uc_cart_help_text', t('Click title to display cart contents.')));
  $config->set('uc_cart_block_collapsed', update_variable_get('uc_cart_block_collapsed', true));
  $config->set('uc_cart_block_image', update_variable_get('uc_cart_block_image', true));
  $config->set('uc_cart_new_account_details', update_variable_get('uc_cart_new_account_details', t('<b>Optional.</b> New customers may supply custom account details.<br />We will create these for you if no values are entered.')));
  $config->set('uc_add_item_redirect', update_variable_get('uc_cart_add_item_redirect', 'cart'));
  $config->set('uc_minimum_subtotal', update_variable_get('uc_minimum_subtotal', 0));
  $config->set('uc_continue_shopping_use_last_url', update_variable_get('uc_continue_shopping_use_last_url', true));
  $config->set('uc_continue_shopping_type', update_variable_get('uc_continue_shopping_type', 'link'));
  $config->set('uc_continue_shopping_url', update_variable_get('uc_continue_shopping_url', ''));
  $config->set('uc_checkout_enabled', update_variable_get('uc_checkout_enabled', true));
  $config->set('uc_checkout_anonymous', update_variable_get('uc_checkout_anonymous', true));
  $config->set('uc_new_customer_email', update_variable_get('uc_new_customer_email', true));
  $config->set('uc_new_customer_login', update_variable_get('uc_new_customer_login', false));
  $config->set('uc_new_customer_status_active', update_variable_get('uc_new_customer_status_active', false));
  $config->set('uc_use_next_buttons', update_variable_get('uc_use_next_buttons', false));
  $config->set('uc_collapse_current_pane', update_variable_get('uc_collapse_current_pane', true));
  $config->set('uc_checkout_instructions', update_variable_get('uc_checkout_instructions', ''));
  $config->set('uc_checkout_review_instructions', update_variable_get('uc_checkout_review_instructions', uc_get_message('review_instructions')));
  $config->set('uc_msg_order_submit', update_variable_get('uc_msg_order_submit', uc_get_message('completion_message')));
  $config->set('uc_msg_order_logged_in', update_variable_get('uc_msg_order_logged_in', uc_get_message('completion_logged_in')));
  $config->set('uc_msg_order_existing_user', update_variable_get('uc_msg_order_existing_user', uc_get_message('completion_existing_user')));
  $config->set('uc_msg_order_new_user', update_variable_get('uc_msg_order_new_user', uc_get_message('completion_new_user')));
  $config->set('uc_msg_order_new_user_logged_in', update_variable_get('uc_msg_order_new_user_logged_in', uc_get_message('completion_new_user_logged_in')));
  $config->set('uc_msg_continue_shopping', update_variable_get('uc_msg_continue_shopping', uc_get_message('continue_shopping')));
  $config->set('uc_pane_cart_field_cart_weight', update_variable_get('uc_pane_cart_field_cart_weight', 2));

  $panes = uc_cart_cart_pane_list(NULL);
  foreach ($panes as $id => $pane) {
    $config->set('uc_cap_' . $pane['id'] . '_enabled', update_variable_get('uc_cap_' . $pane['id'] . '_enabled', $pane['enabled']));
    update_variable_del('uc_cap_' . $pane['id'] . '_enabled');
    $config->set('uc_cap_' . $pane['id'] . '_weight', update_variable_get('uc_cap_' . $pane['id'] . '_weight', $pane['weight']));
    update_variable_del('uc_cap_' . $pane['id'] . '_weight');
  }

  $panes = _uc_checkout_pane_list(NULL);
  foreach ($panes as $id => $pane) {
    $config->set('uc_pane_' . $pane['id'] . '_enabled', update_variable_get('uc_pane_' . $pane['id'] . '_enabled', $pane['enabled']));
    update_variable_del('uc_pane_' . $pane['id'] . '_enabled');
    $config->set('uc_pane_' . $pane['id'] . '_weight', update_variable_get('uc_pane_' . $pane['id'] . '_weight', $pane['weight']));
    update_variable_del('uc_pane_' . $pane['id'] . '_weight');
  }

  $config->save();


  update_variable_del('uc_cart_add_item_msg');
  update_variable_del('uc_cart_empty_button');
  update_variable_del('uc_cart_anon_duration');
  update_variable_del('uc_cart_anon_unit');
  update_variable_del('uc_cart_auth_duration');
  update_variable_del('uc_cart_auth_unit');
  update_variable_del('uc_cart_breadcrumb_text');
  update_variable_del('uc_cart_breadcrumb_url');
  update_variable_del('uc_cart_mail_existing');
  update_variable_del('uc_cart_email_validation');
  update_variable_del('uc_cart_new_account_name');
  update_variable_del('uc_cart_new_account_password');
  update_variable_del('uc_cart_default_same_address');
  update_variable_del('uc_cart_delivery_not_shippable');
  update_variable_del('uc_cart_checkout_complete_page');
  update_variable_del('uc_cart_block_empty_hide');
  update_variable_del('uc_cart_block_collapsible');
  update_variable_del('uc_cart_show_help_text');
  update_variable_del('uc_cart_help_text');
  update_variable_del('uc_cart_block_collapsed');
  update_variable_del('uc_cart_block_image');
  update_variable_del('uc_cart_new_account_details');
  update_variable_del('uc_add_item_redirect');
  update_variable_del('uc_minimum_subtotal');
  update_variable_del('uc_continue_shopping_use_last_url');
  update_variable_del('uc_continue_shopping_type');
  update_variable_del('uc_continue_shopping_url');
  update_variable_del('uc_checkout_enabled');
  update_variable_del('uc_checkout_anonymous');
  update_variable_del('uc_new_customer_email');
  update_variable_del('uc_new_customer_login');
  update_variable_del('uc_new_customer_status_active');
  update_variable_del('uc_use_next_buttons');
  update_variable_del('uc_collapse_current_pane');
  update_variable_del('uc_checkout_instructions');
  update_variable_del('uc_checkout_review_instructions');
  update_variable_del('uc_msg_order_submit');
  update_variable_del('uc_msg_order_logged_in');
  update_variable_del('uc_msg_order_existing_user');
  update_variable_del('uc_msg_order_new_user');
  update_variable_del('uc_msg_order_new_user_logged_in');
  update_variable_del('uc_msg_continue_shopping');
  update_variable_del('uc_pane_cart_field_cart_weight');


}

/**
 * Implements hook_install().
 */
function uc_cart_install() {
  $config = config('uc_cart.settings');

  $panes = uc_cart_cart_pane_list(NULL);
  foreach ($panes as $id => $pane) {
    $config->set('uc_cap_' . $pane['id'] . '_enabled', $pane['enabled']);
    $config->set('uc_cap_' . $pane['id'] . '_weight', $pane['weight']);
  }

  $panes = _uc_checkout_pane_list('rebuild');
  foreach ($panes as $id => $pane) {
    $config->set('uc_pane_' . $pane['id'] . '_enabled', $pane['enabled']);
    $config->set('uc_pane_' . $pane['id'] . '_weight', $pane['weight']);
  }

  $config->set('uc_cart_help_text', t('Click title to display cart contents.'));
  $config->get('uc_cart_new_account_details', t('<b>Optional.</b> New customers may supply custom account details.<br />We will create these for you if no values are entered.'));

  $config->set('uc_checkout_review_instructions', uc_get_message('review_instructions'));
  $config->set('uc_msg_order_submit', uc_get_message('completion_message'));
  $config->set('uc_msg_order_logged_in', uc_get_message('completion_logged_in'));
  $config->set('uc_msg_order_existing_user', uc_get_message('completion_existing_user'));
  $config->set('uc_msg_order_new_user', uc_get_message('completion_new_user'));
  $config->set('uc_msg_order_new_user_logged_in', uc_get_message('completion_new_user_logged_in'));
  $config->set('uc_msg_continue_shopping', uc_get_message('continue_shopping'));

  $config->save();
}
