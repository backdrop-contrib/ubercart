<?php

/**
 * @file
 * Install, update and uninstall functions for the uc_payment module.
 */

/**
 * Implements hook_schema().
 */
function uc_payment_schema() {
  $schema = array();

  $schema['uc_payment_receipts'] = array(
    'description' => 'Stores completed payments.',
    'fields' => array(
      'receipt_id' => array(
        'description' => 'Primary key: the payment receipt ID.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'order_id' => array(
        'description' => 'The {uc_orders}.order_id.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'method' => array(
        'description' => 'The payment method.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
      ),
      'amount' => array(
        'description' => 'The payment amount in the store default currency.',
        'type' => 'numeric',
        'precision' => 16,
        'scale' => 5,
        'not null' => TRUE,
        'default' => 0,
      ),
      'uid' => array(
        'description' => 'The {users}.uid who collected the payment.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'data' => array(
        'description' => 'A serialized array of extra payment data.',
        'type' => 'text',
        'serialize' => TRUE,
      ),
      'comment' => array(
        'description' => 'A comment made on the payment.',
        'type' => 'text',
      ),
      'received' => array(
        'description' => 'The Unix timestamp indicating when the payment was received.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'indexes' => array(
      'order_id' => array('order_id'),
    ),
    'primary key' => array('receipt_id'),
    'foreign keys' => array(
      'uc_orders' => array(
        'table' => 'uc_orders',
        'columns' => array('order_id' => 'order_id'),
      ),
    ),
  );

  return $schema;
}

/**
 * Implements hook_install().
 */
function uc_payment_install() {
  $t = get_t();

  db_merge('uc_order_statuses')
    ->key(array('order_status_id' => 'payment_received'))
    ->insertFields(array(
    'order_status_id' => 'payment_received',
    'title' => $t('Payment received'),
    'state' => 'payment_received',
    'weight' => 10,
    'locked' => 1,
  ))
    ->updateFields(array(
    'state' => 'payment_received',
    'locked' => 1,
  ))
    ->execute();
  // Dynamically generated variable data was detected on the following lines.
  // /ubercart/payment/uc_payment/uc_payment.module line 398

  $config = config('uc_payment.settings');
  foreach (module_invoke_all('uc_payment_method') as $id => $method) {
    // Preserve backward compatibility for methods with no key specified.
    if (is_numeric($id)) {
      $id = $method['id'];
    }
    $config->set('uc_payment_method_' . $id . '_checkout', $method['checkout']);
    $config->set('uc_payment_method_' . $id . '_weight', $method['weight']);
  }
  $config->save();
}

/**
 * Implements hook_uninstall().
 */
function uc_payment_uninstall() {
  db_delete('variable')
    ->condition(db_or()
      ->condition('name', 'uc_pg_%', 'LIKE')
      ->condition('name', 'uc_payment_%', 'LIKE'))
    ->execute();
}

/**
 * Implements hook_update_last_removed().
 */
function uc_payment_update_last_removed() {
  return 7001;
}

/**
 * Implements hook_update_N().
 */
function uc_payment_update_1000() {
  $config = config('uc_payment.settings');
  // TODO udate these dynamic variables
  foreach (module_invoke_all('uc_payment_method') as $id => $method) {
    // Preserve backward compatibility for methods with no key specified.
    if (is_numeric($id)) {
      $id = $method['id'];
    }
    $config->set('uc_payment_method_' . $id . '_checkout', update_variable_get('uc_payment_method_' . $id . '_checkout', $method['checkout']));
    update_variable_del('uc_payment_method_' . $id . '_checkout');
    $config->set('uc_payment_method_' . $id . '_weight', update_variable_get('uc_payment_method_' . $id . '_weight', $method['weight']));
    update_variable_del('uc_payment_method_' . $id . '_weight');
  }


  $config->set('uc_payment_method_gateway', update_variable_get('uc_payment_method_gateway', 'dynamic variable in file /ubercart/payment/uc_payment/uc_payment.module line 398'));
  $config->set('uc_payment_show_order_total_preview', update_variable_get('uc_payment_show_order_total_preview', 'TRUE'));

  $config->save();


  update_variable_del('uc_payment_method_gateway');
  update_variable_del('uc_payment_show_order_total_preview');
}
