<?php

/**
 * @file
 * Install, update and uninstall functions for the uc_product_kit module.
 */

/**
 * Implements hook_schema().
 */
function uc_product_kit_schema() {
  $schema['uc_product_kits'] = array(
    'description' => 'Stores product kit information.',
    'fields' => array(
      'vid' => array(
        'description' => 'The {node}.vid of the product kit.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'nid' => array(
        'description' => 'The {node}.nid of the product kit.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'product_id' => array(
        'description' => 'The {uc_products}.nid of a product contained in the kit.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'mutable' => array(
        'description' => 'A flag indicating whether the contents of the kit can be changed by the customer. 1 => Mutable. 0 => Immutable.',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
        'default' => 0,
      ),
      'qty' => array(
        'description' => 'The number of this product contained in the kit.',
        'type' => 'int',
        'size' => 'small',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'discount' => array(
        'description' => 'The adjustment to the {uc_products}.sell_price of the product.',
        'type' => 'float',
        'not null' => TRUE,
        'default' => 0.0,
      ),
      'ordering' => array(
        'description' => 'The weight of this product in relation to other products in the kit.',
        'type' => 'int',
        'size' => 'small',
        'not null' => TRUE,
        'default' => 0,
      ),
      'synchronized' => array(
        'description' => 'A flag indicating that changes to the sell price of this product will change the total price of the kit. 1 => Yes. 0 => No.',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('vid', 'product_id'),
    'foreign keys' => array(
      'node' => array(
        'table' => 'node',
        'columns' => array(
          'nid' => 'nid',
          'vid' => 'vid',
        ),
      ),
      'uc_products' => array(
        'table' => 'uc_products',
        'columns' => array('product_id' => 'nid'),
      ),
    ),
  );

  return $schema;
}

/**
 * Implements hook_enable().
 */
function uc_product_kit_enable() {
  // Hack the product kit node type into the catalog if this module is enabled
  // some time after uc_catalog.
  if (module_exists('uc_catalog') && $vocabulary = config_get('uc_catalog.settings', 'uc_catalog_vocabulary')) {
    $field = field_info_field('taxonomy_catalog');
    if (!isset($field['bundles']['node']['product_kit'])) {
      uc_catalog_add_node_type('product_kit');
    }
  }

  // Add the body field.
  node_types_rebuild();
  $types = node_type_get_types();
  node_add_body_field($types['product_kit'], t('Description'));

  uc_product_set_teaser_display('product_kit');

  // Add a default image field to product kits.
  uc_product_add_default_image_field('product_kit');
}

/**
 * Implements hook_uninstall().
 */
function uc_product_kit_uninstall() {
  config_clear('uc_product_kit.settings', 'uc_product_kit_mutable');
}


/**
 * Implements hook_update_last_removed().
 */
function uc_product_kit_update_last_removed() {
  return 7001;
}

/**
 * Implements hook_update_N().
 */
function uc_product_kit_update_1000() {
  $config = config('uc_product_kit.settings');
  $config->set('uc_product_kit_mutable', update_variable_get('uc_product_kit_mutable', UC_PRODUCT_KIT_UNMUTABLE_WITH_LIST));
  $config->set('uc_image_product_kit', update_variable_get('uc_image_product_kit', ''));
  $config->save();
  update_variable_del('uc_product_kit_mutable');
  update_variable_del('uc_image_product_kit');
}

/**
 * Implements hook_install().
 */
function uc_product_kit_install() {
  $product_kit_node_type = array(
    'type' => 'product_kit',
    'name' => t('Product kit'),
    'base' => 'uc_product_kit',
    'description' => t('Use <em>product kits</em> to list two or more products together, presenting a logical and convenient grouping of items to the customer.'),
    'title_label' => t('Name'),
    'custom' => 1,
    'modified' => 1,
    'locked' => 0,
    'is_new' => TRUE,
    'settings' => array(
      'promote_enabled' => FALSE,
    ),
  );

  $product_kit_node_type = node_type_set_defaults($product_kit_node_type);
  node_type_save($product_kit_node_type);
  $label = t('Description');
  node_add_body_field($product_kit_node_type, $label);
}
